
- name: check /opt/Thinkbox/certs/
  shell: |
    ls -ltriah /opt/Thinkbox/certs/
  become: true
  register: certsdir

- name: show /opt/Thinkbox/certs/
  debug:
    var: certsdir.stdout
  become: true

- name: "Check for {{ deadline_certificates_location }}/{{ deadline_proxy_certificate }}"
  stat: path="{{ deadline_certificates_location }}/{{ deadline_proxy_certificate }}"
  register: Deadline10RemoteClient
  become: true

- name: Ensure db is still valid.  if this fails, db is corrupted or there is a permissions issue
  block:
    - name: Fail if missing
      fail: msg="{{ deadline_certificates_location }}/{{ deadline_proxy_certificate }} is missing"
      when: Deadline10RemoteClient.stat.exists == False
      become: true

    - name: check limits # https://serverfault.com/questions/591812/how-to-set-ulimits-for-mongod
      shell: |
        cat /etc/security/limits.conf
      become: true

    - name: install tree
      package:
        name: tree
        state: present
      become: true

    # - name: check db without password
    #   shell: |
    #     cd /opt/Thinkbox/DeadlineDatabase10/mongo/application/
    #     tree
    #     cd /opt/Thinkbox/DeadlineDatabase10/mongo/application/bin/
    #     ./{{ mongo_executable }} --eval 'printjson(db.getCollectionNames())'
    #   # no_log: true
    #   when: deadline_proxy_certificate_password is undefined
    #   become: true
    #   retries: 5
    #   delay: 5
    #   register: result
    #   until: result.rc == 0

    - name: check db with password
      shell: |
        cd /opt/Thinkbox/DeadlineDatabase10/mongo/application/bin/
        ./{{ mongo_executable }} --sslPEMKeyPassword "avaultpassword" --eval 'printjson(db.getCollectionNames())'
      no_log: true
      # when: deadline_proxy_certificate_password is defined
      become: true
      retries: 5
      delay: 5
      register: result
      until: result.rc == 0

    - include_role:
        name: "deadlinedb"
        tasks_from: "logs"
        
  rescue:
    - include_role:
        name: "deadlinedb"
        tasks_from: "logs"
    - meta: end_play