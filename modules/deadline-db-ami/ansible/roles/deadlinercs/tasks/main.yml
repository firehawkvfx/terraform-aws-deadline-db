---
# tasks file for roles/deadlinercs

- name: install xdg-utils
  package:
    name: xdg-utils
    state: present
  become: yes
  
- name: Ensures dir exists to avoid log error
  file:
    path: "/usr/share/desktop-directories"
    state: directory
    owner: "{{ user_deadlineuser_name }}"
  become: yes

- name: Ensures dir exists
  file:
    path: "/home/{{ user_deadlineuser_name }}/Downloads/Deadline-{{ deadline_version }}-linux-installers/"
    state: directory
    owner: "{{ user_deadlineuser_name }}"
  become: yes

- name: Ensures dir exists
  file:
    path: /opt/Thinkbox/certs
    state: directory
    owner: "{{ user_deadlineuser_name }}"
  become: yes

- name: Extract
  unarchive:
    src: "{{ deadline_linux_installers_tar }}"
    dest: "/home/{{ user_deadlineuser_name }}/Downloads/{{ deadline_linux_basename }}"
    owner: "{{ user_deadlineuser_name }}"
    mode: u+x
    remote_src: yes
  become: yes

- name: set permissions
  file:
    path: "{{ deadline_server_certificates_location }}/{{ deadline_client_certificate }}"
    mode: u=r,g=r,o=r
    owner: "{{ user_deadlineuser_name }}"
  become: yes

- name: deadline must have full access to repository
  file: 
    path: /opt/Thinkbox/DeadlineRepository10
    owner: "{{ user_deadlineuser_name }}"
    mode: u=rwX,g=rwX,o=r
    recurse: yes
  become: yes

- name: check permissions and ownership on certificates
  command: ls -ltria {{ deadline_server_certificates_location }}/
  register: cert_permissions

- debug: msg="{{ cert_permissions.stdout }}"
- debug: msg="{{ cert_permissions.stderr }}"


- name: "Ansible find files in subdirectory download"
  find:
    paths: /home/{{ user_deadlineuser_name }}/Downloads/{{ deadline_linux_basename }}
    patterns: "*DeadlineClient-{{ deadline_version }}-linux-x64-installer.run"
  register: files_matched
  become: true

- debug:
    msg: "installer path: {{ files_matched.files[0].path }}"

- stat:
    path: /var/lib/Thinkbox/Deadline10/deadline.ini
  register: deadline_ini_file

- name: get date
  shell: |
    date +"%Y%m%d_%H%M%S"
  register: current_date

- set_fact:
    backup_dest: "/var/lib/Thinkbox/Deadline10/deadline.bak_{{ current_date.stdout }}"
  when: deadline_ini_file.stat.exists

- debug:
    msg: "will backup file to {{ backup_dest }}"
  when: deadline_ini_file.stat.exists

- name: move old config to backup.  this prevents old conf settings staying around.
  command: "mv /var/lib/Thinkbox/Deadline10/deadline.ini {{ backup_dest }}"
  when: deadline_ini_file.stat.exists

# - name: install deadline rcs
#   shell: |
#     # set -x
#     {{ files_matched.files[0].path }} \
#     --mode unattended \
#     --launcherdaemon true \
#     --enable-components proxyconfig \
#     --servercert {{ deadline_certificates_location }}/{{ deadline_client_certificate }} \
#     --debuglevel 2 \
#     --prefix /opt/Thinkbox/Deadline10 \
#     --connectiontype Repository \
#     --repositorydir /opt/Thinkbox/DeadlineRepository10/ \
#     --dbsslcertificate {{ deadline_certificates_location }}/{{ deadline_client_certificate }} \
#     --licensemode UsageBased \
#     --daemonuser {{ user_deadlineuser_name }} \
#     --connserveruser {{ user_deadlineuser_name }} \
#     --httpport 8080 \
#     --tlsport 4433 \
#     --enabletls true \
#     --tlscertificates existing  \
#     --generatedcertdir {{ deadline_certificates_location }}/ \
#     --servercert /etc/ssl/mongodb_ca.pem \
#     --cacert /etc/ssl/mongodb_issuing_ca.pem \
#     --slavestartup false \
#     --proxyrootdir {{ deadline_proxy_root_dir }} \
#     --proxycertificate {{ deadline_certificates_location }}/{{ deadline_proxy_certificate }}
#     ls -ltriah {{ deadline_certificates_location }}
#   register: deadline_rcs_install_output_shell
#   args:
#     executable: /bin/bash
#   become: true

# - name: install deadline rcs
#   shell: |
#     # set -x
#     {{ files_matched.files[0].path }} \
#     --mode unattended \
#     --launcherdaemon true \
#     --enable-components proxyconfig \
#     --debuglevel 2 \
#     --prefix /opt/Thinkbox/Deadline10 \
#     --connectiontype Repository \
#     --repositorydir /opt/Thinkbox/DeadlineRepository10/ \
#     --dbsslcertificate /etc/ssl/client.pem \
#     --licensemode UsageBased \
#     --daemonuser {{ user_deadlineuser_name }} \
#     --connserveruser {{ user_deadlineuser_name }} \
#     --httpport 8080 \
#     --tlsport 4433 \
#     --enabletls true \
#     --tlscertificates existing  \
#     --generatedcertdir {{ deadline_certificates_location }}/ \
#     --servercert /etc/ssl/client.pem \
#     --cacert /etc/ssl/ca.pem \
#     --slavestartup false \
#     --proxyrootdir {{ deadline_proxy_root_dir }} \
#     --proxycertificate /etc/ssl/client.pem
#     ls -ltriah {{ deadline_certificates_location }}
#   register: deadline_rcs_install_output_shell
#   args:
#     executable: /bin/bash
#   become: true  

- name: install deadline rcs
  block: 
    - name: install deadline rcs
      shell: |
        # set -x
        {{ files_matched.files[0].path }} \
        --mode unattended \
        --launcherdaemon true \
        --enable-components proxyconfig \
        --servercert {{ deadline_server_certificates_location }}/{{ deadline_client_certificate }} \
        --debuglevel 2 \
        --prefix /opt/Thinkbox/Deadline10 \
        --connectiontype Repository \
        --repositorydir /opt/Thinkbox/DeadlineRepository10/ \
        --dbsslcertificate {{ deadline_server_certificates_location }}/{{ deadline_client_certificate }} \
        --dbsslpassword avaultpassword \
        --licensemode UsageBased \
        --daemonuser {{ user_deadlineuser_name }} \
        --connserveruser {{ user_deadlineuser_name }} \
        --httpport 8080 \
        --tlsport 4433 \
        --enabletls true \
        --tlscertificates generate  \
        --generatedcertdir {{ deadline_certificates_location }}/ \
        --clientcert_pass avaultpassword \
        --slavestartup false \
        --proxycertificatepassword avaultpassword \
        --proxyrootdir {{ deadline_proxy_root_dir }} \
        --proxycertificate {{ deadline_certificates_location }}/{{ deadline_proxy_certificate }}
        ls -ltriah {{ deadline_certificates_location }}
        if [[ -f "{{ deadline_certificates_location }}/Deadline10RemoteClient.pfx" ]]; then # Rename the default client cert to include the environment.  This allows a user to switch databases if required.
          sudo mv -f {{ deadline_certificates_location }}/Deadline10RemoteClient.pfx {{ deadline_certificates_location }}/{{ deadline_proxy_certificate }} # Ensure unique name for cert based on resource color
          sudo cp -f {{ deadline_certificates_location }}/{{ deadline_proxy_certificate }} /secrets/keys/{{ deadline_proxy_certificate }}
          ls -ltriah {{ deadline_certificates_location }}
        else
          1>&2 echo "ERROR: Couldn't find {{ deadline_certificates_location }}/Deadline10RemoteClient.pfx for remote clients"
          exit 1
        fi
      register: deadline_rcs_install_output_shell
      args:
        executable: /bin/bash
      become: true
    - name: check deadline rcs install output
      debug:
        msg: "{{ deadline_rcs_install_output_shell.stdout }}"
    - include_role:
        name: "deadlinedb"
        tasks_from: "logs"
  rescue:
    - include_role:
        name: "deadlinedb"
        tasks_from: "logs"
    - name: fatal
      set_fact:
        fatal_error: true
  always:
  - meta: end_play
    when: fatal_error is defined and fatal_error
  any_errors_fatal: yes

- name: check /var/lib/Thinkbox/Deadline10/deadline.ini
  command: cat /var/lib/Thinkbox/Deadline10/deadline.ini 
  register: deadline_config

- debug: msg="{{ deadline_config.stdout }}"
- debug: msg="{{ deadline_config.stderr }}"

- name: set permissions, deadline installer may be interfering.
  file:
    path: "{{ deadline_certificates_location }}/{{ deadline_proxy_certificate }}"
    mode: u=r,g=r,o=r
    owner: "{{ user_deadlineuser_name }}"
  become: yes

- name: Allow new lines from ansible shell output.  Logout or reboot for this to take effect.
  lineinfile:
    path: /var/lib/Thinkbox/Deadline10/deadline.ini
    line: "{{ item }}"
    create: yes
  become: true
  with_items:
    - "LaunchPulseAtStartup=True"
    - "LaunchRemoteConnectionServerAtStartup=True"
    - "ProxyRoot={{ deadline_proxy_root_dir }}"
    - "ProxyUseSSL=True"
    - "ProxySSLCertificate={{ deadline_certificates_location }}/{{ deadline_proxy_certificate }}"
    - "ProxyRoot0={{ deadline_proxy_root_dir }};{{ deadline_certificates_location }}/{{ deadline_proxy_certificate }}"

- name: Restart service for deadlinedb
  service:
    name: deadline10launcher
    state: restarted
  become: true

- name: check /var/lib/Thinkbox/Deadline10/deadline.ini
  command: cat /var/lib/Thinkbox/Deadline10/deadline.ini 
  register: deadline_config

- debug: msg="{{ deadline_config.stdout }}"
- debug: msg="{{ deadline_config.stderr }}"

- name: Allow new lines from ansible shell output.  Logout or reboot for this to take effect.
  lineinfile:
    path: "/home/{{ user_deadlineuser_name }}/.bashrc"
    line: "{{ item }}"
    create: yes
  with_items:
    - "alias deadlinemonitor='cd /opt/Thinkbox/Deadline10/bin && ./deadlinemonitor -proxyserver {{ deadline_proxy_root_dir }}'"
    - "alias deadlinercs='cd /opt/Thinkbox/Deadline10/bin && ./deadlinercs'"
    - "alias deadlinepulse='cd /opt/Thinkbox/Deadline10/bin && ./deadlinepulse'"

- name: show ulimits
  command: cat /etc/init.d/Deadline10db
  register: deadline_initd

- debug: msg="{{ deadline_initd.stdout }}"
- debug: msg="{{ deadline_initd.stderr }}"

# prep permissions for worker install

- name: set permissions Thinkbox dir - non recursive
  file: 
    path: /opt/Thinkbox/
    state: directory
    mode: u+rX,g+rX,o-rwx
    owner: "{{ user_deadlineuser_name }}"
    # group: syscontrol
  become: yes

- name: set permissions Thinkbox cert dir - non recursive
  file: 
    path: /opt/Thinkbox/certs
    state: directory
    mode: u=rwX,g=rX,o-rwx
    owner: "{{ user_deadlineuser_name }}"
    # group: syscontrol
  become: yes

- name: set permissions DeadlineRepository10 - recursive
  file:
    path: /opt/Thinkbox/DeadlineRepository10/
    owner: "{{ user_deadlineuser_name }}"
    # group: syscontrol
    mode: u=rX,g=rX,o-rwx
    recurse: yes
  become: true

- name: set permissions DeadlineRepository10/jobs jobsArchived reports
  file:
    path: "{{ item }}"
    owner: "{{ user_deadlineuser_name }}"
    # group: syscontrol
    mode: u=rwX,g=rwX,o-rwx
    recurse: yes
  become: true
  with_items:
  - /opt/Thinkbox/DeadlineRepository10/jobs
  - /opt/Thinkbox/DeadlineRepository10/jobsArchived
  - /opt/Thinkbox/DeadlineRepository10/reports

- include_role:
    name: "deadlinedb"
    tasks_from: "logs"